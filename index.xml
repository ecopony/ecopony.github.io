<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ed copony</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on ed copony</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 02 Sep 2015 22:18:55 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>about</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Wed, 02 Sep 2015 22:18:55 -0700</pubDate>
      
      <guid>http://localhost:1313/about/</guid>
      <description></description>
    </item>
    
    <item>
      <title>work history</title>
      <link>http://localhost:1313/posts/work-history/</link>
      <pubDate>Thu, 03 Sep 2015 08:09:10 -0700</pubDate>
      
      <guid>http://localhost:1313/posts/work-history/</guid>
      <description>

&lt;p&gt;I&amp;rsquo;ve worked at start-ups and Fortune-50 companies, as a manager and as an individual contributor. I&amp;rsquo;ve built teams and joined existing ones. I&amp;rsquo;ve been lucky enough to be a part of some great teams and work with lots of smart people that I could learn from.&lt;/p&gt;

&lt;h2 id=&#34;fidelity-life-association-efinancial:809fe95aa1207f4a8c5ef148a739d7da&#34;&gt;Fidelity Life Association / eFinancial&lt;/h2&gt;

&lt;h4 id=&#34;manager-of-software-development:809fe95aa1207f4a8c5ef148a739d7da&#34;&gt;Manager of Software Development&lt;/h4&gt;

&lt;p&gt;I was hired to build out a new development team (and office) to take on some of the biggest challenges facing these two companies that had come together in an acquisition a few years prior.&lt;/p&gt;

&lt;p&gt;We grew from two people to 10, delivered on projects, and brought new techniques and ways of thinking to the organization.&lt;/p&gt;

&lt;p&gt;Tech: Ruby, RabbitMQ, AWS&lt;/p&gt;

&lt;p&gt;Techniques: Kanban, lean startup, Drive-inspired leadership and team-building.&lt;/p&gt;

&lt;p&gt;Successes: Using ideas from lean-startup, delivered the first consumer-facing, agentless point-of-sale system, conducting multiple experiments on streamlining the sales experience.&lt;/p&gt;

&lt;h3 id=&#34;jama-software:809fe95aa1207f4a8c5ef148a739d7da&#34;&gt;Jama Software&lt;/h3&gt;

&lt;h4 id=&#34;software-developer-lead-role:809fe95aa1207f4a8c5ef148a739d7da&#34;&gt;Software Developer, lead role&lt;/h4&gt;

&lt;p&gt;At Jama, I was recruited to come join a new, small team that was building out the next generation of the company&amp;rsquo;s products. We were a team of four, working independently from the rest of the development organization, doing rapid prototyping and experimentation. Our work was eventually folded back into the core product, which led to new challenges of merging multiple server- and client-side architectures into the same product.&lt;/p&gt;

&lt;p&gt;Tech: Java, Jersey RESTful services, Backbone.js, Ext JS, jQuery, server- and client-side logicless templates, Ruby on Rails.&lt;/p&gt;

&lt;p&gt;Techniques: Kanban, rapid prototyping, continuous integration, build pipeline.&lt;/p&gt;

&lt;p&gt;Successes: Helped accelerate the learning and decision-making that led to our team&amp;rsquo;s work being fed back into the core product.&lt;/p&gt;

&lt;h3 id=&#34;analog-analytics-now-barclaycard:809fe95aa1207f4a8c5ef148a739d7da&#34;&gt;Analog Analytics (now Barclaycard)&lt;/h3&gt;

&lt;h4 id=&#34;software-developer:809fe95aa1207f4a8c5ef148a739d7da&#34;&gt;Software Developer&lt;/h4&gt;

&lt;p&gt;Analog Analytics was a start-up that developed a white-label platform for daily deals. I joined a mature team as an individual contributor. We had a lot of fun adding features to the platform. This was my first experience doing continuous delivery. We would deploy to production many times a day using Chef code that developers themselves helped develop and maintain.&lt;/p&gt;

&lt;p&gt;Tech: Ruby on Rails, Chef.&lt;/p&gt;

&lt;p&gt;Techniques: Pair programming, continuous integration and deployment, dev-ops style collaboration.&lt;/p&gt;

&lt;p&gt;Successes: Integrated quickly into an existing team, delivering software on day one, building out several key new features, and serving as lead on some important customer-driven projects.&lt;/p&gt;

&lt;h3 id=&#34;collaborative-software-initiative:809fe95aa1207f4a8c5ef148a739d7da&#34;&gt;Collaborative Software Initiative&lt;/h3&gt;

&lt;h4 id=&#34;software-developer-lead-role-1:809fe95aa1207f4a8c5ef148a739d7da&#34;&gt;Software Developer, lead role&lt;/h4&gt;

&lt;p&gt;At CSI, I was the first full-time development hire, coming over from Liberty Mutual with my manager to build a new team and start work on a new project. We were to build an open source, disease surveillance application. Initially the application was for the public health department of the state of Utah, with the hope that a community would grow around it and be used by other health departments and the CDC.&lt;/p&gt;

&lt;p&gt;I worked closely with the VP of Engineering and Product to build out the development team that would work with the subject matter experts in Utah to accomplish these goals. In the first year, we built a highly effective team and replaced Utah&amp;rsquo;s existing surveillance application. In the years that followed, we continued to iterate, growing the application into a powerful tool in the fight to prevent disease.&lt;/p&gt;

&lt;p&gt;Our work got some press. Our team was featured in &lt;a href=&#34;http://content.time.com/time/specials/2007/article/0,28804,1706699_1707550_1820094,00.html&#34;&gt;Time magazine&lt;/a&gt;. The form-builder mentioned in &lt;a href=&#34;http://siliconflorist.com/2008/09/18/collaborative-software-initiative-launches-trisano-an-open-source-means-of-tracking-disease/&#34;&gt;this article&lt;/a&gt; was one of the more interesting challenges in building the application, especially given some of the constraints we had for deploying it. Our tech stack was discussed on &lt;a href=&#34;http://www.infoq.com/news/2008/05/csi-disease-management-jruby&#34;&gt;InfoQ&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Tech: Ruby on Rails&lt;/p&gt;

&lt;p&gt;Techniques: Distributed agile, continuous integration, open-source devlopment/community maintenance&lt;/p&gt;

&lt;p&gt;Successes: Building a great team and a cool product that did some good for the world&lt;/p&gt;

&lt;h3 id=&#34;liberty-mutual:809fe95aa1207f4a8c5ef148a739d7da&#34;&gt;Liberty Mutual&lt;/h3&gt;

&lt;h4 id=&#34;software-developer-later-a-technologist:809fe95aa1207f4a8c5ef148a739d7da&#34;&gt;Software Developer, later a Technologist&lt;/h4&gt;

&lt;p&gt;I started at Liberty Mutual in Portland when IT was still under Liberty Northwest. In those days, I was an individual contributor on a web-based, auto-insurance application whose backend was a staged, event-driven system. I was developing services &amp;lsquo;on the bus&amp;rsquo; and fixing scalability issues with the pre-existing ORM implementation.&lt;/p&gt;

&lt;p&gt;Eventually, Liberty Northwest IT was folded into Liberty Mutual, and I was asked to join a small team that reported directly into the CTO of Liberty&amp;rsquo;s agency markets business unit. Our charter was to help establish the future application architecture for Liberty Mutual, bring agile and lean software development techniques to the rest of the company, and bring open-source software usage and development in the company mainstream.&lt;/p&gt;

&lt;p&gt;On this new team I was involved in rapid prototyping, architectural spikes, and product evaluations. On any given day we could be called upon by the CTO to stop what we were doing to address some business inefficiency. We were also asked to take trips out to other parts of the organization to present on agile and lean development techniques.&lt;/p&gt;

&lt;p&gt;Tech: Java, Ruby on Rails, Adobe Flex, JavaSpaces, Spring, Hibernate, ESB, SonicMQ&lt;/p&gt;

&lt;p&gt;Techniques: Test-driven development, lean, agile&lt;/p&gt;

&lt;p&gt;Successes: On the Liberty Northwest team, a re-write of an ORM implementation drastically improved performance of a key system. On the Liberty Mutual team, one of our greatest successes was to help stop a major project that was failing.&lt;/p&gt;

&lt;h2 id=&#34;other-roles:809fe95aa1207f4a8c5ef148a739d7da&#34;&gt;Other roles&lt;/h2&gt;

&lt;h3 id=&#34;medical-management-international-banfield:809fe95aa1207f4a8c5ef148a739d7da&#34;&gt;Medical Management International (Banfield)&lt;/h3&gt;

&lt;h4 id=&#34;software-developer-1:809fe95aa1207f4a8c5ef148a739d7da&#34;&gt;Software Developer&lt;/h4&gt;

&lt;h3 id=&#34;portland-public-schools:809fe95aa1207f4a8c5ef148a739d7da&#34;&gt;Portland Public Schools&lt;/h3&gt;

&lt;h4 id=&#34;software-developer-lead-role-2:809fe95aa1207f4a8c5ef148a739d7da&#34;&gt;Software Developer, lead role&lt;/h4&gt;

&lt;h3 id=&#34;apress:809fe95aa1207f4a8c5ef148a739d7da&#34;&gt;Apress&lt;/h3&gt;

&lt;h4 id=&#34;software-developer-2:809fe95aa1207f4a8c5ef148a739d7da&#34;&gt;Software Developer&lt;/h4&gt;

&lt;h3 id=&#34;the-industry-standard:809fe95aa1207f4a8c5ef148a739d7da&#34;&gt;The Industry Standard&lt;/h3&gt;

&lt;h4 id=&#34;software-developer-3:809fe95aa1207f4a8c5ef148a739d7da&#34;&gt;Software Developer&lt;/h4&gt;

&lt;h3 id=&#34;sparks-com:809fe95aa1207f4a8c5ef148a739d7da&#34;&gt;Sparks.com&lt;/h3&gt;

&lt;h4 id=&#34;software-developer-4:809fe95aa1207f4a8c5ef148a739d7da&#34;&gt;Software Developer&lt;/h4&gt;
</description>
    </item>
    
    <item>
      <title>side projects</title>
      <link>http://localhost:1313/posts/side-projects/</link>
      <pubDate>Thu, 03 Sep 2015 15:52:20 -0700</pubDate>
      
      <guid>http://localhost:1313/posts/side-projects/</guid>
      <description>

&lt;h3 id=&#34;velofight:25ea7f7c6471d04306c4889ea469f667&#34;&gt;Velofight!&lt;/h3&gt;

&lt;h4 id=&#34;online-fantasy-cycling-game-and-community:25ea7f7c6471d04306c4889ea469f667&#34;&gt;Online fantasy cycling game and community&lt;/h4&gt;

&lt;p&gt;Velofight! started when my friend and colleague Mike Westover came down from Seattle to visit me in Portland. We met at a coffee shop and he pitched his idea. He knew someone in Seattle who had been running a fantasy cycling game for his friends out of an Excel spreadsheet for a number of years. Mike&amp;rsquo;s idea: Take the game out of the spreadsheet, put it online in time for the Tour de France, do a little advertising for it, slap ads on it, and see what happens. And, as Mike is skilled at doing, he made it sound really simple. It would have to be, since we had about two weeks before the Tour de France started.&lt;/p&gt;

&lt;p&gt;We had about a week to get user account creation and roster creation built and the app deployed. This would allow people to get signed up and make their teams. Then, we had about a week until the first stage, so we had that long to get individual stage scoring built. From there, no problem! We had three weeks to finish the final scoring. The application also emailed participants about daily results, so there was that piece, and we gave away killer Velofight! socks and t-shirts for top performers.&lt;/p&gt;

&lt;p&gt;Velofight! was a blast. We used Rails for the app, we deployed to AWS, we managed the work with Pivotal Tracker. I was the main developer, Mike handled deployment, operations, and some light development. We got all parts of the site up in time, working after hours when we were done with our day jobs. Despite the mad dash, we did test-driven development, had great test coverage, and only a couple, very minor defects make it to production. The users had a blast, and we made improvements for the Tour of Spain, which was about a month later.&lt;/p&gt;

&lt;p&gt;Over the next winter we added support for single-day races and added series support for multiple competitions throughout the year. Users could invite their friends to Velofight!, and many did. We had users all over the world.&lt;/p&gt;

&lt;p&gt;We ran the site for four years, before time constraints on both of us led us to, sadly, shut it down. Our users thanked us &amp;ndash; some even said they would pay to play! Someday we might decide to bring back Velofight! on a different platform.&lt;/p&gt;

&lt;h3 id=&#34;mlb-gameday-api-go-version:25ea7f7c6471d04306c4889ea469f667&#34;&gt;MLB Gameday API (Go version)&lt;/h3&gt;

&lt;p&gt;After using my Scala version of the API for a couple years (see the next side project below), I wanted an easier way to play with command-line apps. This led me to Go. I learned Go and had an alternate version of the API working in short order. Building with Go was a much simpler experience than Scala. It&amp;rsquo;s a great option for solving a lot of different kinds of problems.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/ecopony/gamedayapi&#34;&gt;MLB Gameday API (in Go)&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;mlb-gameday-api-scala-version:25ea7f7c6471d04306c4889ea469f667&#34;&gt;MLB Gameday API (Scala version)&lt;/h3&gt;

&lt;p&gt;Wanting to learn Scala, and wanting to play with the free data that MLB makes available for fans to use, I developed an API to MLB Gameday using Scala. Scala has some cool features, the ability to do OO and more functional programming is nice. The language and the ecosystem is pretty complex, though. It takes a lot of room in your head, and can make some simple things harder than they need to be.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/ecopony/scala-gameday-api&#34;&gt;MLB Gameday API (in Scala)&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>skills</title>
      <link>http://localhost:1313/posts/skills/</link>
      <pubDate>Thu, 03 Sep 2015 15:52:09 -0700</pubDate>
      
      <guid>http://localhost:1313/posts/skills/</guid>
      <description>&lt;p&gt;Here are a few, anyway.&lt;/p&gt;

&lt;p&gt;Languages: Java, Ruby, Go, Scala, JavaScript, TypeScript, Dart, R, SQL&lt;/p&gt;

&lt;p&gt;Libraries/Frameworks: Ruby on Rails, Play, Jersey, Ext JS, Angular 2, Node.js, Spring, Hibernate, AWS SDKs, jQuery&lt;/p&gt;

&lt;p&gt;Build/Ops: Git, AWS, Chef, Puppet, Jenkins, Bamboo, Google Analytics, Maven, Rake, Capistrano&lt;/p&gt;

&lt;p&gt;Other stuff: RabbitMQ, integration patterns, REST API design, Selenium, PostgreSQL, MySQL, HTML, CSS, XML, XSLT, Haml, Sass, Bootstrap&lt;/p&gt;

&lt;p&gt;Techniques: Lean, agile, Kanban, lean startup, impact mapping, test-driven development, continuous integration and deployment&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>interests</title>
      <link>http://localhost:1313/posts/interests/</link>
      <pubDate>Thu, 03 Sep 2015 08:10:33 -0700</pubDate>
      
      <guid>http://localhost:1313/posts/interests/</guid>
      <description>

&lt;p&gt;I have many interests, and they are constantly shifting in priority. This is just a snapshot of a top few things at the moment.&lt;/p&gt;

&lt;h4 id=&#34;amazon-web-services:9ff85ae240172bb97ce520c762b5dcae&#34;&gt;Amazon Web Services&lt;/h4&gt;

&lt;p&gt;The rate at which AWS rolls out new services and iterates on existing ones boggles the mind. The Gateway API, Lambda and DynamoDB hold my gaze currently.&lt;/p&gt;

&lt;h4 id=&#34;client-side-development:9ff85ae240172bb97ce520c762b5dcae&#34;&gt;Client-side development&lt;/h4&gt;

&lt;p&gt;Web Components, Polymer, Angular 2, TypeScript, Dart, React&amp;hellip; the area of client-side technology is absolutely crazy right now. It&amp;rsquo;s fascinating and frustrating. Targets, libraries, frameworks are all moving so fast. Trying to pick your horse to get you through the next year or so is a task that will make your head spin.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve been bouncing all over the place with the above technology, trying to decide what I should build my next round of side projects on. I&amp;rsquo;m liking the direction of Web Components, and am favoring tools and frameworks that are either working to implement what the standard looks like, or look like what the standard looks like.&lt;/p&gt;

&lt;h4 id=&#34;offline-first-nobackend:9ff85ae240172bb97ce520c762b5dcae&#34;&gt;Offline-first / #nobackend&lt;/h4&gt;

&lt;p&gt;Combining the previous two interests, I want to delve deeper into building client-side apps that go through the AWS Gateway API, through to AWS Lambda and Dynamo DB.&lt;/p&gt;

&lt;h4 id=&#34;statistics:9ff85ae240172bb97ce520c762b5dcae&#34;&gt;Statistics&lt;/h4&gt;

&lt;p&gt;Apache Spark looks super cool. R is awesome. Putting them together looks like it could be a powerful combination.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>